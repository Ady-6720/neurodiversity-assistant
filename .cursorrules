// .cursorrules â€” React Native Expo Cursor Guidelines

module.exports = {
  bestPractices: [
    "Use functional components exclusively; leverage React Hooks (e.g., useEffect, useState, useNavigation)",
    "Favor Expo SDK-native APIs (Camera, Location, Notifications) over third-party packages when available",
    "Implement navigation using @react-navigation/native and stack/tab navigators appropriately",
    "Use Expo Asset system (Asset.fromModule) for static files like images and fonts",
    "Structure error boundaries and logging (e.g., Sentry, Bugsnag) for production-grade apps",
    "Utilize Expo Push Notification system; test tokens and permission flows carefully",
    "Respect device form factors and status bars via react-native-safe-area-context",
  ],

  folderStructure: {
    description: "Standard scalable folder structure",
    structure: `
assets/
  fonts/
  images/
src/
  components/   // Reusable UI widgets
  screens/      // Screen-level components
  navigation/   // Stack/tab navigators
  hooks/        // Custom reusable hooks
  utils/        // Utility functions, helpers
App.js
app.json
babel.config.js
    `,
  },

  typescript: {
    enforce: true,
    notes: "Use TypeScript (.tsx) for all components and screens. Define types/interfaces for props and state.",
  },

  styling: {
    method: "React Native StyleSheet API or Tailwind with NativeWind",
    avoid: ["Inline styles", "Global styles across unrelated components"],
  },

  securePractices: [
    "Use Expo SecureStore for storing tokens or sensitive data",
    "Avoid hardcoding secrets or tokens",
    "Do not use AsyncStorage for sensitive data",
  ],

  offlineSupport: {
    description: "Implement basic offline support",
    suggestions: [
      "Use react-query or Redux Toolkit Query with persistence",
      "Handle fetch failures gracefully with loading/error states",
      "Cache images/assets for offline availability",
    ],
  },

  buildAndDeploy: [
    "Use `expo export` and `eas build` for production builds",
    "Configure OTA (Over-The-Air) updates via `expo-updates` and app.json",
    "Keep app.json and eas.json configurations clean and strict",
  ],

  prohibitedCommands: {
    reason: "Cross-platform compatibility and Metro bundler constraints",
    disallow: ["&&", "||", "`rm -rf`", "`sudo`"],
    message:
      "Do not use Unix shell operators like `&&` or unsafe commands in npm scripts. Use sequential script chaining via separate commands or cross-platform-safe tools like `npm-run-all`.",
  },

  additionalTips: [
    "Do not disable Fast Refresh or Metro logging unless debugging specific edge cases",
    "Always test on both Android and iOS simulators/emulators",
    "Avoid direct DOM manipulation or using web-only packages",
  ],
}; 